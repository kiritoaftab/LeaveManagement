
import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.PrintWriter;
import java.lang.System.Logger;
import java.lang.System.Logger.Level;
import java.util.List;
import java.util.ArrayList;
import java.util.Iterator;
import javax.swing.DefaultListModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author AFTAB DUTTA
 */
public class OptimizationFrame extends javax.swing.JFrame {

    /**
     * Creates new form OptimizationFrame
     */
    public static ArrayList<String> listId=new ArrayList<>();
    public static ArrayList<String> listType=new ArrayList<>();
    public static ArrayList<String> listDays=new ArrayList<>();
    public OptimizationFrame() {
        initComponents();
        displayer();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jScrollPane1.setViewportView(jList1);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel1.setText("PENDING LEAVE APPLICATIONS");
        jLabel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton1.setText("APPROVE");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton2.setText("REJECT");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton3.setText("BACK");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(86, 86, 86)
                        .addComponent(jButton1)
                        .addGap(74, 74, 74)
                        .addComponent(jButton2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(163, 163, 163)
                        .addComponent(jButton3)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(50, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(85, 85, 85))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton3)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
          List lst= jList1.getSelectedValuesList();
        
        for(int i=0;i<lst.size();i++){
            System.out.println("Approving the values "+ lst.get(i)); 
            String curr= lst.get(i).toString().trim();
            char[] curr_arr=curr.toCharArray();
            String rejectId ="";
            for(int k=3;k<curr_arr.length;k++){
                if(curr_arr[k]!=','){
                    rejectId+=curr_arr[k];
                }else{
                    break;
                }
            }
            System.out.println("Rejected id is "+rejectId);
            int index=-1;
           for(int k=0;i<listId.size();k++){
            if(rejectId.equals(listId.get(i))){
                index=k; break;
            }
        }
        String type=listType.get(index);
        String days=listDays.get(index);
        System.out.println("Rejecting leave request form "+rejectId);
        Memoisation.applicants.remove(rejectId+","+type+","+days);
        Memoisation.status.put(rejectId, 2);
         OptimizationFrame ep= new OptimizationFrame();
           ep.setVisible(true);
           OptimizationFrame.this.setVisible(false);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        Admin admin=new Admin();
        admin.setVisible(true);
        OptimizationFrame.this.setVisible(false);
        
    }//GEN-LAST:event_jButton3ActionPerformed
    DefaultListModel mod= new DefaultListModel();
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        // test case print the id selected -- SUCCESS
        int[] selected=jList1.getSelectedIndices();
        
//        List list = (List) jList1.getSelectedValuesList();

//        Object[] selectedValues= jList1.getSelectedValues();
        List lst= jList1.getSelectedValuesList();
        
        for(int i=0;i<lst.size();i++){
            System.out.println("Approving the values "+ lst.get(i)); 
            String curr= lst.get(i).toString().trim();
            char[] curr_arr=curr.toCharArray();
            String approveId ="";
            for(int k=3;k<curr_arr.length;k++){
                if(curr_arr[k]!=','){
                    approveId+=curr_arr[k];
                }else{
                    break;
                }
            }
            System.out.println("Approved id is "+approveId);
        int index=-1;
        for(int k=0;k<listId.size();k++){
            if(approveId.equals(listId.get(k))){
                index=k; break;
            }
        }
        String type=listType.get(index);
        String days=listDays.get(index);
        int ind=Integer.parseInt(type);
        int dayys=Integer.parseInt(days);
        String curr_data=Memoisation.leaveData.get(approveId);
        String str[] = curr_data.split("\\,");
        StringBuilder sb=new StringBuilder();
        for(int j=0;j<str.length;j++){
            if(j==ind){
                int cleave=Integer.parseInt(str[j]);
                int nleave=cleave-dayys;
                System.out.println("new leaves ="+nleave);
                sb.append(nleave+",");
            }else{
                sb.append(str[j]+",");
            }
        }
        System.out.println("updated leaves for "+Memoisation.getName(approveId)+" "+sb);
        try {
            StringBuilder sb1=new StringBuilder();
            
            BufferedReader br=new BufferedReader(new FileReader("leave_data.txt"));
            String s;
            while((s=br.readLine())!=null){
                
                String [] str1= s.split("\\,");
                if(str1.length<=1) continue;
                if(str1[1].equals(approveId)){
                    sb1.append("faculty,"+approveId+","+sb+"\n");
                }else{
                    sb1.append(s+"\n");
                }
            }
            br.close();
            PrintWriter pw=new PrintWriter("leave_data.txt");
            System.out.println(sb1 +" writing in leave_data");
            pw.println(sb1);
            pw.flush();pw.close();
            listId.remove(index);
            listType.remove(index);
            listDays.remove(index);
            Memoisation.applicants.remove(approveId+","+type+","+days);
            Memoisation.leaveData.put(approveId,sb.toString());
            Memoisation.status.put(approveId, 1);
            OptimizationFrame ep= new OptimizationFrame();
            ep.setVisible(true);
            OptimizationFrame.this.setVisible(false);
            
        } catch (FileNotFoundException ex) {
            System.out.println("file might be held by 2 prople");
        } catch (IOException ex) {
            System.out.println("file might be held by 2 prople");
        }
        
        }
        
     
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OptimizationFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OptimizationFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OptimizationFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OptimizationFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new OptimizationFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JList<String> jList1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    private void displayer() {
           Iterator<String> it=Memoisation.applicants.iterator();
        while(it.hasNext()){
            jList1.setModel(mod);
            String str=it.next(); //id,choice,days
            String s[]=str.split("\\,");
            mod.addElement("Id:"+s[0]+", Name:"+Memoisation.getName(s[0])+
                    " Type:"+Memoisation.getLeave(Integer.parseInt(s[1])) +
                    " Days:"+s[2]);
             listId.add(s[0]);
             listType.add(s[1]);
             listDays.add(s[2]);
        }
        // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
}
